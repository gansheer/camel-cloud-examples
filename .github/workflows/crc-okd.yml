name: CRC OKD

on:
  push:
    branches:
      - "github-actions"

jobs:
  testing:
    runs-on: ubuntu-latest
    env:
      SHELL: /bin/bash
      KUBECONFIG: '/Users/runner/.kube/config'
    steps:
      - id: checkout-code
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: setup-go
        name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - id: download-crc
        name: Download crc
        run: |
          curl -sSLo /tmp/crc.tar.xz https://developers.redhat.com/content-gateway/file/pub/openshift-v4/clients/crc/2.42.0/crc-linux-amd64.tar.xz
          tar -C /tmp -xvf /tmp/crc.tar.xz > /dev/null 2>&1
          mv /tmp/crc-linux-2.42.0-amd64/crc /usr/local/bin

      - name: Install required virtualization software
        run: |
          sudo apt-get update
          sudo apt install qemu-kvm libvirt-daemon libvirt-daemon-system
          sudo usermod -a -G libvirt $USER
      - name: Remove unwanted stuff to free up disk image
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf /opt/hostedtoolcache/CodeQL

          sudo docker image prune --all --force

          sudo swapoff -a
          sudo rm -f /mnt/swapfile

      - name: Set the crc config
        run: |
          crc config set preset okd
          crc config set network-mode user

      - name: Setup the crc
        run: sudo -su $USER crc setup

      - name: Start the crc
        run: sudo -su $USER crc start

      - id: cluster-check
        name: Check that the cluster is up
        run: |
          oc get all -A
          oc api-resources